<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login | Chat</title>
    <!-- Bootstrap 5 CSS CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="../public/styles/style.css">
    <style>
        /* From Uiverse.io by Yaya12085 */ 
.form {
  display: flex;
  flex-direction: column;
  gap: 10px;
  max-width: 350px;
  background-color: #fff;
  padding: 20px;
  border-radius: 20px;
  position: relative;
}

.title {
  font-size: 28px;
  color: royalblue;
  font-weight: 600;
  letter-spacing: -1px;
  position: relative;
  display: flex;
  align-items: center;
  padding-left: 30px;
}

.title::before,.title::after {
  position: absolute;
  content: "";
  height: 16px;
  width: 16px;
  border-radius: 50%;
  left: 0px;
  background-color: royalblue;
}

.title::before {
  width: 18px;
  height: 18px;
  background-color: royalblue;
}

.title::after {
  width: 18px;
  height: 18px;
  animation: pulse 1s linear infinite;
}

.message, .signin {
  color: rgba(88, 87, 87, 0.822);
  font-size: 14px;
}

.signin {
  text-align: center;
}

.signin a {
  color: royalblue;
}

.signin a:hover {
  text-decoration: underline royalblue;
}

.flex {
  display: flex;
  width: 100%;
  gap: 6px;
}

.form label {
  position: relative;
}

.form label .input {
  width: 100%;
  padding: 10px 10px 20px 10px;
  outline: 0;
  border: 1px solid rgba(105, 105, 105, 0.397);
  border-radius: 10px;
}

.form label .input + span {
  position: absolute;
  left: 10px;
  top: 15px;
  color: grey;
  font-size: 0.9em;
  cursor: text;
  transition: 0.3s ease;
}

.form label .input:placeholder-shown + span {
  top: 15px;
  font-size: 0.9em;
}

.form label .input:focus + span,.form label .input:valid + span {
  top: -11px;
  font-size: 0.7em;
  font-weight: 600;
}

.form label .input:valid + span {
  color: green;
}

.submit {
  border: none;
  outline: none;
  background-color: royalblue;
  padding: 10px;
  border-radius: 10px;
  color: #fff;
  font-size: 16px;
  transform: .3s ease;
}

.submit:hover {
  background-color: rgb(56, 90, 194);
}
label{
    padding-top: 15px;
}

@keyframes pulse {
  from {
    transform: scale(0.9);
    opacity: 1;
  }

  to {
    transform: scale(1.8);
    opacity: 0;
  }
}
    </style>
</head>
<body class="d-flex justify-content-center align-items-center vh-100  ">
 
 
    <form class="form" onsubmit="return handleEvent(event)">
        <p class="title">Register </p>
        <p class="message">Signup now and get full access to our app. </p>
            <div class="flex">
            <label>
                <input required="" placeholder="" type="text" class="input" id="Firstname">
                <p id="name-error"></p>
                <span>Firstname</span>
            </label>
    
            <label>
                <input required="" placeholder="" type="text" class="input" id="Lastname">
                <p id="lastname-error"></p>
                <span>Lastname</span>
            </label>
        </div>  
                
        <label>
            <input required="" placeholder="" type="email" class="input" id="email">
            <p id="email-error"></p>
            <span>Email</span>
        </label> 
            
        <label>
            <input required="" placeholder="" type="password" class="input" id="password">
            <p id="password-error"></p>
            <span>Password</span>
        </label>
        <label>
            <input required="" placeholder="" type="password" class="input" id="compassword">
            <p class="cpassword-error"></p>
            <span>Confirm password</span>
        </label>
        <button type="submit">Submit</button>
        <p class="signin">Already have an acount ? <a href="#">Signin</a> </p>
    </form>
    <!-- Bootstrap 5 JS CDN (Optional) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function validateRegister() {
    console.log('Validation started');

    let Firstname=document.getElementById('Firstname').value
    let Lastname=document.getElementById('Lastname').value
    let email=document.getElementById('email').value
    let password=document.getElementById('password').value
    let Compassword=document.getElementById('compassword').value
   
    // Clear any previous error messages
    document.getElementById('name-error').textContent = '';
    document.getElementById('lastname-error').textContent = '';
    document.getElementById('email-error').textContent = '';
    document.getElementById('password-error').textContent = '';
    // document.getElementById('cpassword-error').textContent = '';
   
    // Regular expression to ensure the name doesn't contain numbers
    const nameRegex = /^[A-Za-z]+(\s[A-Za-z]+)*$/;

    // Name validation
    if (!Firstname || !nameRegex.test(Firstname)) {
        document.getElementById('name-error').textContent = 'Please enter a valid name with no numbers.';
        console.log('Name validation failed');
        return false;
    }
    if (!Lastname || !nameRegex.test(Lastname)) {
        document.getElementById('name-error').textContent = 'Please enter a valid Last name with no numbers.';
        console.log('Name validation failed');
        return false;
    }
    
    // Email validation
    if (!email) {
        document.getElementById('email-error').textContent = 'Email field should not be empty!';
        console.log('Email field is empty');
        return false;
    }

    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/;
   
    if (!email || !emailRegex.test(email)) {
        document.getElementById('email-error').textContent = 'Please enter a valid email address. (eg: example@gmail.com)';
        console.log('Invalid email format');
        return false;
    }
   
    

   
    
    // Password validation
    const passwordRegex = /^(?=.*[!@#$%^&*]).{6,}$/;

    if (!password || !passwordRegex.test(password)) {
        document.getElementById('password-error').textContent = 'Password must be at least 6 characters and contain a special character.';
        console.log('Invalid password format');
        return false;
    }

    // Check if the password consists of the same character
    if (new Set(password).size === 1) {
        document.getElementById('password-error').textContent = 'Password should not consist of the same character.';
        console.log('Password has same character');
        return false;
    }
   
    // Confirm password validation
    if (password !== Compassword) {
        document.getElementById('cpassword-error').textContent = 'Passwords do not match!';
        console.log('Passwords do not match');
        return false;
    }

    console.log('Validation passed');
    return true;
};
        async function signup(){

             let Firstname=document.getElementById('Firstname').value
             let Lastname=document.getElementById('Lastname').value
             let email=document.getElementById('email').value
             let password=document.getElementById('password').value
             

            try {
                let response=await fetch('/signup',{
                    method:'post',
                    headers:{'Content-Type':'application/json'},
                    body:JSON.stringify({Firstname,Lastname,email,password})
                })
                let data=await response.json()
                if(response.ok)
                {
                  window.location.href='/'

                }else{
                if(data.AlreadyUser)
                {
                  Swal.fire({
                    text: "Email Already Exists", 
                    showConfirmButton: false,
                    timer: 3000, 
                    backdrop: false,
                    customClass: {
                        popup: 'swal2-popup-custom', 
                    },
                    position: 'bottom-end', // Set position to bottom right
                    toast: true, // Make it a toast notification
                })
                }
              }
                
            } catch (error) {
                
            }
         }

         function handleEvent(event)
        {
            event.preventDefault();
            if(validateRegister())
            {
                signup()
            }
        }

    </script>
    <!-- sweet alert  -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>
</html>
